{"version":3,"file":"nodeair.min.js","sources":["../src/util.js","../src/validator.js","../src/index.js"],"sourcesContent":["/**\r\n * 工具类\r\n */\r\nclass Util {\r\n  constructor(naInstance) {\r\n    this.naInstance = naInstance;\r\n  }\r\n  /**\r\n   * 生成指定长度的随机字符串\r\n   * @param {Number} length 字符串长度\r\n   * @returns {String}\r\n   */\r\n  randomString(length) {\r\n    const str = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*_';\r\n    let result = '';\r\n    for (let i = length; i > 0; --i) {\r\n      result += str[Math.floor(Math.random() * str.length)];\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Util;\r\n","class Validator {\r\n  constructor(naInstance) {\r\n    this.naInstance = naInstance;\r\n  }\r\n  /**\r\n   * 是否是网名\r\n   * @param {} str \r\n   * @returns \r\n   */\r\n  isNickname(str) {\r\n    const reg = /^[\\u4e00-\\u9fa5_a-zA-Z0-9]{2,20}$/;\r\n    const message = {\r\n      'zh-cn': '2到20位，只允许中文、字母和数字'\r\n    }\r\n    const res = reg.test(str);\r\n    return res ? res : message[this.naInstance.lang];\r\n  }\r\n  /**\r\n   * 是否是密码\r\n   * @param {String} str 字符串\r\n   * @returns {Boolean}\r\n   */\r\n  isPassword(str) {\r\n    const reg = /^.*(?=.{6,16})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\r\n    const message = {\r\n      'zh-cn': '4到16位，至少包含1个大写字母、1个小写字母、1个数字和1个特殊字符'\r\n    }\r\n    const res = reg.test(str);\r\n    return res ? res : message[this.naInstance.lang];\r\n  }\r\n  /**\r\n   * 是否是用户名\r\n   * @param {String} str 字符串\r\n   * @returns {Boolean}\r\n   */\r\n  isUsername(str) {\r\n    const reg = /^[a-zA-Z0-9_-]{4,16}$/;\r\n    const message = {\r\n      'zh-cn': '4到16位，只允许字母、数字、下划线和减号'\r\n    }\r\n    const res = reg.test(str);\r\n    return res ? res : message[this.naInstance.lang];\r\n  }\r\n  /**\r\n   * 是否是邮箱\r\n   * @param {String} str 字符串\r\n   * @returns {Boolean}\r\n   */\r\n  isEmail(str) {\r\n    const reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\r\n    return reg.test(str);\r\n  }\r\n  /**\r\n   * 是否是手机号码（中国）\r\n   * @param {String} str 字符串\r\n   * @returns {Boolean}\r\n   */\r\n  isChinaPhone(str) {\r\n    const reg = /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d{8}$/;\r\n    return reg.test(str);\r\n  }\r\n  /**\r\n   * 是否是IP\r\n   * @param {String} str 字符串\r\n   * @returns {Boolean}\r\n   */\r\n  isIP(str) {\r\n    const reg = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n    const message = {\r\n      'zh-cn': '请输入正确的IP地址'\r\n    }\r\n    const res = reg.test(str);\r\n    return res ? res : message[this.naInstance.lang];\r\n  }\r\n  /**\r\n   * 是否是端口号\r\n   * @param {String} str 字符串\r\n   * @returns {Boolean}\r\n   */\r\n  isPort(port) {\r\n    const message = {\r\n      'zh-cn': '2到20位，只允许中文、字母和数字'\r\n    }\r\n    if (/^[1-9]\\d*|0$/.test(port) && port * 1 >= 0 && port * 1 <= 65535) {\r\n      return true;\r\n    }\r\n    return message[this.naInstance.lang];\r\n  }\r\n}\r\n\r\nexport default Validator;\r\n","import Util from './util';\r\nimport Validator from './validator';\r\n\r\n/**\r\n * NodeAir 前端 SDK\r\n */\r\nclass NodeAir {\r\n  constructor() {\r\n    this.lang = this._getSiteLang();\r\n    this.util = new Util(this);\r\n    this.validator = new Validator(this);\r\n  }\r\n  /**\r\n   * 获取网站语言\r\n   */\r\n  _getSiteLang() {\r\n    if (document && document.querySelector('html')) {\r\n      let lang = document.querySelector('html').getAttribute('lang') || 'zh-cn';\r\n      return lang.toLowerCase();\r\n    } else {\r\n      return 'zh-cn';\r\n    }\r\n  }\r\n}\r\n\r\nexport default NodeAir;\r\n"],"names":["Util","naInstance","length","str","result","i","Math","floor","random","Validator","res","test","this","lang","port","_getSiteLang","util","validator","document","querySelector","getAttribute","toLowerCase"],"mappings":"yiBAGMA,wBACQC,kBACLA,WAAaA,wCAOpB,SAAaC,WACLC,EAAM,0EACRC,EAAS,GACJC,EAAIH,EAAQG,EAAI,IAAKA,EAC5BD,GAAUD,EAAIG,KAAKC,MAAMD,KAAKE,SAAWL,EAAID,gBAExCE,WClBLK,wBACQR,kBACLA,WAAaA,sCAOpB,SAAWE,OAKHO,EAJM,oCAIIC,KAAKR,UACdO,GAJS,SACL,qBAGgBE,KAAKX,WAAWY,gCAO7C,SAAWV,OAKHO,EAJM,oEAIIC,KAAKR,UACdO,GAJS,SACL,uCAGgBE,KAAKX,WAAWY,gCAO7C,SAAWV,OAKHO,EAJM,wBAIIC,KAAKR,UACdO,GAJS,SACL,yBAGgBE,KAAKX,WAAWY,6BAO7C,SAAQV,SACM,8DACDQ,KAAKR,+BAOlB,SAAaA,SACC,6DACDQ,KAAKR,uBAOlB,SAAKA,OAKGO,EAJM,8FAIIC,KAAKR,UACdO,GAJS,SACL,cAGgBE,KAAKX,WAAWY,4BAO7C,SAAOC,YAID,eAAeH,KAAKG,IAAgB,EAAPA,GAAY,GAAY,EAAPA,GAAY,QAH9C,SACL,qBAKIF,KAAKX,WAAWY,6DC9E1BA,KAAOD,KAAKG,oBACZC,KAAO,IAAIhB,EAAKY,WAChBK,UAAY,IAAIR,EAAUG,4CAKjC,kBACMM,UAAYA,SAASC,cAAc,SAC1BD,SAASC,cAAc,QAAQC,aAAa,SAAW,SACtDC,cAEL"}